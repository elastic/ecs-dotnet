@using System.Collections.Generic
@using System.Globalization
@using System.Linq
@inherits Elastic.CommonSchema.Generator.Views.CodeTemplatePage<Elastic.CommonSchema.Generator.Projection.CommonSchemaTypesProjection>
// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information

/*
IMPORTANT NOTE
==============
This file has been generated. 
If you wish to submit a PR please modify the original csharp file and submit the PR with that change. Thanks!
*/

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Elastic.CommonSchema;

@foreach (var kv in Model.EntitiesWithPropertiesAtRoot)
{
	var entity = kv.Key;
	var fields = entity.BaseFieldSet.ValueProperties.Where(field => !kv.Value.Contains(field.JsonProperty)).ToList();
	var emptyCheck = string.Join(" || ", fields.Select(f => $"{f.Name} != null").ToList());
	if (string.IsNullOrEmpty(emptyCheck))
	{
		emptyCheck = "false";
	}
	
<text>public partial class @entity.Name 
{
	[JsonIgnore]
	internal bool ShouldSerialize =>
		@Raw(emptyCheck);
}
</text>
}